1) Identifique la capa del modelo OSI que maneja los siguientes aspectos:  
a) Establece el m√©todo de acceso al medio.  
Enlace de datos (Capa 2). Se encarga de la comunicacion correcta (hace de moderador) entre los dispositivos de una red, asegurando que cada salto entre dos dispositivos vecinos se haga correctamente y sin errores.
b) Determinar que ruta seguir√°n los paquetes a trav√©s de la red.
Capa de Red (Capa 3). Elige la mejor ruta para llevar el paquete desde el origen hacia su destino.
c) Codificaci√≥n de datos en forma est√°ndar. 
Presentacion (Capa 6). Se encarga de que la informaci√≥n transmitida se entienda correctamente en ambos extremos. Traduce la informacion a un formato comun y estandar antes de enviarlos, y al recibirlosb tambien, todo con el fin de que el receptor pueda interpretarlo. A su vez incluye cifrado (seguridad) o compresion (ahorro de espacio).

2) Indique con que capa se identifican estos t√©rminos: 
Cada capa tiene una unidad de datos o tambien llamado PDU-Protocol Data Unit. Estas unidades dependen de la capa en la que nos encontremos. Para las siguientes:
a) Frame/Trama -> PDU asociado a la capa de Enlace de Datos.
b) Datagrama -> PDU asociado a la capa de Transporte (UDP) .
c) Segmento -> PDU asociado a la capa de Transporte (TCP)
d) Paquete/Datagrama IP-> PDU asociado a la capa de Red.

Diferencias entre UDP y TCP. Ambos protocolos de la capa de transporte. 

TCP (Transmission Control Protocol)

-Protocolo orientado a conexi√≥n.
-Garantiza que los datos lleguen completos, en orden y sin errores.
-Ejemplo: cuando naveg√°s por internet o descarg√°s un archivo.
-PDU: Segmento.

UDP (User Datagram Protocol)

-Protocolo sin conexi√≥n.
-No garantiza entrega ni orden, solo env√≠a los datos tal cual.
-M√°s r√°pido y con menos overhead.
-Ejemplo: streaming de video, videojuegos online, DNS.
-PDU: Datagrama.

3) ¬øCu√°l es la capa del modelo OSI que se encarga de la comunicaci√≥n de red
confiable entre nodos finales y proporciona mecanismos para establecer, mantener
y terminar circuitos virtuales, detecci√≥n y recuperaci√≥n de errores de transporte y
control de flujo de informaci√≥n? Justifique su respuesta.
a) Capa f√≠sica
b) Capa de enlace de datos
c) Capa de red
d) Capa de transporte -> Correcta

Justificacion (GPT): 
La capa de transporte (capa 4 en el modelo OSI) se encarga de:
1.Comunicaci√≥n confiable entre nodos finales
Garantiza que los datos enviados desde un host lleguen correctamente al host destino.
2.Establecer, mantener y terminar circuitos virtuales
Ejemplo: TCP establece una conexi√≥n antes de enviar datos (handshake de 3 v√≠as), mantiene la sesi√≥n mientras dura la comunicaci√≥n y luego la cierra.
3.Detecci√≥n y recuperaci√≥n de errores de transporte
TCP usa n√∫meros de secuencia y ACKs para asegurarse de que los segmentos lleguen completos.
4.Control de flujo de informaci√≥n
Evita que el receptor se sature enviando datos m√°s r√°pido de lo que puede procesar.

Por qu√© no son las otras capas:
Capa f√≠sica ‚Üí solo transmite bits por el medio f√≠sico.
Capa de enlace de datos ‚Üí garantiza la transmisi√≥n confiable entre nodos directamente conectados, no entre hosts finales de una red extensa.
Capa de red ‚Üí se encarga de enrutamiento y direccionamiento, no de garantizar fiabilidad ni control de flujo extremo.

4) ¬øCu√°l de las siguientes opciones describe mejor la funci√≥n de la capa de
presentaci√≥n? Justifique su respuesta.
a) Es responsable de la comunicaci√≥n confiable de red entre nodos finales
b) Se ocupa de las estructuras de datos y de la sintaxis de transferencia de datos
de negociaci√≥n -> Correcta
c) Proporciona conectividad y selecci√≥n de rutas entre dos sistemas finales
d) Administra el intercambio de datos entre capas

Justificaci√≥n
La capa de presentaci√≥n (capa 6 del modelo OSI) se encarga de:
1.Representaci√≥n de datos
-Convierte los datos de la aplicaci√≥n a un formato est√°ndar que pueda entender el receptor, por ejemplo:
-Codificaci√≥n de caracteres (ASCII, Unicode)
-Formato de n√∫meros (big-endian, little-endian)
-Formato de archivos (JPEG, MPEG, etc.)
2.Traducci√≥n y negociaci√≥n de formatos
-Si dos sistemas usan formatos distintos, la capa de presentaci√≥n traduce los datos para que ambos puedan interpretarlos correctamente.
3.Compresi√≥n y cifrado (opcional)
-Tambi√©n puede encargarse de comprimir datos o cifrarlos antes de enviarlos y descifrarlos al recibirlos.

5) En el modelo TCP/IP ¬øqu√© capa se encarga de resolver los conflictos que se
generan cuando se intenta enviar un paquete a trav√©s de distintas redes?
a) Transporte
b) Internet -> Cuando hay varias rutas posibles o varios dispositivos intentando enviar paquetes, la capa de Internet usa algoritmos de enrutamiento y tablas de rutas para evitar colisiones y determinar la mejor ruta.
c) Acceso a Red
d) Aplicaci√≥n 

6) ¬øQu√© capas del modelo OSI debe implementar una tarjeta de red (NIC)? 
Una tarjeta de red (NIC, Network Interface Card) es un hardware que permite a un dispositivo conectarse a una red.
Funciones principales:
1.Conexi√≥n f√≠sica a la red
Puede ser mediante cable (Ethernet) o inal√°mbrica (Wi-Fi).
2.Encapsulamiento y transmisi√≥n de datos
Toma los datos de la computadora y los convierte en tramas de la capa de enlace para enviarlos por el medio f√≠sico.
Tambi√©n recibe tramas de la red y las convierte en datos que el sistema puede procesar.
3.Identificaci√≥n en la red
Cada NIC tiene una direcci√≥n MAC √∫nica que identifica al dispositivo en la red local.
4.Control de errores y flujo
Detecta errores en la transmisi√≥n (checksum de la capa de enlace).
Puede controlar la velocidad de transmisi√≥n seg√∫n la capacidad de la red y del dispositivo.

Una tarjeta de red (NIC) aunque es hardware, implementa funciones de las capas fisicas y de enlace de datos (Capa 1 y 2). Ya que transmite y recibe bits a traves del medio (cable, fibra, aire), define estandares como Ethernet, Wi-Fi, velocidades de transmision y ademas encapsula los datos en tramas/frames, controla errores y acceso al medio.

7) ¬øCu√°l es el orden correcto de los pasos del proceso de encapsulamiento? Justifique
su respuesta.
a) Bits, datos, paquetes, tramas 
b) Datos, tramas, paquetes, segmentos, bits
c) Datos, segmentos, paquetes, tramas, bits -> Correcta
d) Bits, tramas, datos, paquetes

El proceso de encapsulamiento se realiza de arriba hacia abajo (desencapsulamiento viceversa). 

1.Datos (Aplicaci√≥n)
La capa de aplicaci√≥n genera la informaci√≥n que queremos enviar (texto, imagen, video, etc.).
2.Segmentos (Transporte)
La capa de transporte divide los datos en segmentos (TCP) o datagramas (UDP) y agrega cabeceras con informaci√≥n de puertos y control de flujo.
3.Paquetes (Red / Internet)
La capa de red agrega la direcci√≥n IP de origen y destino, creando el paquete o datagrama IP.
4.Tramas (Enlace de Datos)
La capa de enlace de datos encapsula los paquetes en tramas, agregando direcci√≥n MAC y control de errores (CRC).
5.Bits (F√≠sica)
Finalmente, la capa f√≠sica convierte las tramas en bits el√©ctricos, √≥pticos o de radio para transmitirlos por el medio.

Extra -> Direccion MAC - Media Acces Control
Es un identificador √∫nico asignado a cada tarjeta de red (NIC).
Sirve para identificar un dispositivo dentro de una red local (LAN).
Es un n√∫mero de 48 bits (6 bytes), normalmente escrito en hexadecimal:
00:1A:2B:3C:4D:5E

Para qu√© sirve ?
1.Identificaci√≥n en la red local
Cada dispositivo en la misma red tiene una MAC distinta, as√≠ los switches saben a d√≥nde enviar cada trama.
2.Control de acceso al medio
Permite que la capa de enlace de datos decida qui√©n puede enviar datos en un momento dado.
3.Filtrado y seguridad
Se pueden configurar routers y switches para permitir o bloquear dispositivos seg√∫n su MAC.

üìå Diferencia con la direcci√≥n IP
Caracter√≠stica	              MAC	                                       IP
Capa OSI	            Enlace de datos (2)	                             Red (3)
Fija o cambiante	    Normalmente fija (grabada en hardware)	 Asignada por red, puede cambiar
Alcance	              Red local	                               Internet / redes interconectadas
Formato	              48 bits hexadecimal	                      IPv4: 32 bits, IPv6: 128 bits

8) El nivel de aplicaci√≥n genera 40 bytes de informaci√≥n para ser transmitidas. Si cada capa del modelo OSI agrega 8 bytes de encabezamiento, determine la eficiencia de esta transmisi√≥n. ¬øY si genera 100 bytes de informaci√≥n ?
Eficiencia -> Lo que sirve/ Total. Para nuestro caso lo que sirve serian los 40 bytes de informacion, mientras que el total serian los 40 bytes + 8*6 bytes (Teniendo en cuenta que las restantes 6 capas a√±aden informacion) = 88 bytes. Por lo que la eficiencia seria de un 40/88 que seria un 45%. En cambio con 100 bytes de informacion seria una eficiencia de 67%. Lo que nos dice que cuanto mayor sea la diferencia entre el tama√±o de los bytes de informacion y el tama√±o de los encabezados agregados, obtendremos mayor eficiencia (Es logico).

9) Se desea transmitir 100 bytes de informaci√≥n. El sistema transmite 1 byte por
segundo y las capas del modelo OSI agregan 1 byte de encabezamiento en total.
Se decide segmentar la informaci√≥n y enviarla en tramas de 10 bytes.
a) ¬øCu√°nto tiempo demorar√° en enviar toda la informaci√≥n?
El byte de encabezamiento se agrega a cada trama que se envia (Capa de enlace de datos). Por lo que al ser 10 tramas de 10 bytes cada una + 1 byte de header. Tenemos en total 110 bytes a transmitir, por lo que el tiempo que demorara en enviarse la informacion sera de 110 seg.
b) Si se decide segmentar en tramas de 4 bytes, ¬øCu√°nto demorar√° en este caso?
Para este caso necesitaremos 25 tramas cada una con 1 byte de header, por lo que seran 125 bytes, es decir 125 segundos de transmision.
c) Suponer que al inicio de la transmisi√≥n se genera ruido durante 1 segundo y eso
provoca la p√©rdida de la informaci√≥n, por lo que se deber√° retransmitir aquello
que se perdi√≥. Calcular nuevamente los puntos a y b.
Habria que ver si ese ruido hace que se pierda la trama entera o solo hace que perdamos 1 byte de informacion. En el caso de que no se pierda la trama entera serian 111 segundos para el a) y 126 segundos para el b). Para el segundo caso (perdida de trama) lo que sucederia es que por ese segundo de ruido el receptor detecte un error en la transmision (checksum por ej) y se tenga que volver a enviar la trama completa, en este caso se perderian 10 segundos por esa trama invalida por lo que para el caso a) se tardarian 120 seg y para el caso b) se perderian 4 segundos por lo que se tardarian 129 segundos.
d) Suponer ahora que hay 1 segundo de ruido al inicio y otro en la mitad de la
transmisi√≥n. Volver a calcular a y b.

10) Un sistema tiene una jerarqu√≠a de protocolos de n niveles. Las aplicaciones generan
mensajes de 300 bytes de longitud. A cada uno de los niveles es necesario a√±adir
una cabecera de 10 bytes.
a) ¬øQu√© porcentaje de la tasa de la red se rellena con cabeceras? ¬øY en el caso
de un modelo OSI?
El porcentaje que representan las cabeceras respecto de la cantidad total de bytes transmitidos es 10 x (n-1) x 100 / (300 + 10 x(n-1)). Para el caso de modelo OSI seria N=7. (Considere n-1 capas para agregar headers ya que la capa fisica no a√±ade header) 
Idea clave -> Cada capa agrega su overhead, mientras m√°s capas tengas, mayor porcentaje de cabeceras, menor eficiencia.
b) Si no se quiere perder m√°s del 10% de la capacidad (tasa de red) ¬øCu√°l es el
tama√±o m√°ximo del campo de cabecera para cada capa (suponiendo que en
todas es el mismo)? ¬øY en el caso de un modelo OSI?
Si no queremos perder mas del 10% de capacidad de la tasa de red (ancho de banda), necesitamos un 90 % de eficiencia. De alli planteamos que D/D + (n-1) x h = 90 % siendo D los datos utiles y h el tama√±o de la cabecera. De esa ecuacion despejamos h y tenemos el valor maximo que puede pesar la cabecera para obtener un 90 % de eficiencia, es decir para que los headers representen el 10% de la tasa de red como maximo. 


11) Se desea transmitir un mensaje de 100000 bytes a trav√©s de un sistema basado en el modelo OSI. Suponer que el mensaje indicado se introduce directamente en la capa de trasporte (ya tiene incluidas sus cabeceras). A continuaci√≥n, se indican las
caracter√≠sticas de cada uno de los niveles involucrados.
i) Nivel de transporte. El tama√±o m√°ximo de la SDU (unidad de datos del servicio) de transporte es de 1800 bytes. El protocolo de transporte utilizado introduce cabeceras de 8 bytes (PCI, informaci√≥n de control del protocolo)).
ii) Nivel de red. El tama√±o m√°ximo de la SDU del nivel de red es de 65535 bytes. El protocolo utilizado es IP (Internet Protocol), que introduce cabeceras de 20 bytes (PCI).
iii) Nivel de enlace. El nivel de enlace utilizado en el sistema introduce cabeceras de 6 bytes (PCI).
iv) Nivel f√≠sico: no se introducen cabeceras (PCI). Se pide:
a) Calcular el n√∫mero de PDU¬¥s de nivel de transporte que se generan, as√≠ como el tama√±o de las SDU¬¥s que se le van a pasar al nivel de red (IP), sabiendo que el nivel de transporte genera una PDU por cada SDU de transporte.
b) Suponiendo que el tama√±o m√°ximo de SDU que acepta el nivel de enlace es de 4096 bytes, calcular el porcentaje de la capacidad del medio que se dedica a transmitir cabeceras.
c) Se sustituye ahora el nivel de enlace del punto anterior por otro nivel de enlace cuya SDU m√°xima es de 512 bytes. En estas condiciones la PDU de nivel 3 que se obtendr√≠a en la situaci√≥n anterior es de un tama√±o superior a la SDU m√°xima
admisible por el nivel de enlace. Para resolver el problema, el nivel de red debe fragmentar la SDU a transmitir en unidades m√°s peque√±as, con el fin de que puedan entregarse al interfaz del servicio del nivel de enlace. En el caso de IP, se puede resumir brevemente el procedimiento de fragmentaci√≥n como sigue:
i) Si el tama√±o de la PDU de nivel de red que se tiene que enviar es menor o igual que el tama√±o m√°ximo de la SDU de nivel de enlace, no se hace fragmentaci√≥n.
ii) En caso contrario, el nivel IP fragmenta de la siguiente forma: se divide la SDU de nivel 3 en tantos fragmentos como sean necesarios, y cada uno de ellos se transmite en una PDU de nivel 3. El tama√±o de cada una de estas PDU¬¥s ser√° igual al de la SDU m√°xima de nivel de enlace, excepto el de la √∫ltima PDU, que puede que sea menor.
En estas condiciones, se pide calcular el n√∫mero de PDU¬¥s de nivel de red que se generan por cada SDU de nivel de red, as√≠ como la longitud de cada una de las PDU¬¥s. Calcule tambi√©n el porcentaje de la capacidad del medio que se emplea en transmitir cabeceras durante la transferencia del mensaje.

SDU - Service Data Unit 
Es la unidad de datos que una capa recibe de la capa superior para transmitirla. Contiene unicamente datos utiles, sin encabezados de la capa actual.
PDU - Protocol Data Unit
Es la unidad de datos que la capa envia al nivel inferior. Esta compuesta del SDU + encabezado y/o trailer de la capa actual.
PCI - Protocol Control Information
Es la informacion de control que se a√±ade a la SDU para formar la PDU. Esta compuesto de las cabeceras y trailers de la capa, los cuales permiten que la capa siguiente: 
-Identifique la SDU 
-Detecte errores 
-Control de flujo

PDU = SDU + PCI.
